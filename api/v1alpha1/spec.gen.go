// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
